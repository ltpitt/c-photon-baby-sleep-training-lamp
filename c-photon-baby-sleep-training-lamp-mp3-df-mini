/* MP3 PLAYER PROJECT
From project: http://educ8s.tv/arduino-mp3-player/
Modified for "Particle world" by @FiDel
*/

# define Start_Byte 0x7E
# define Version_Byte 0xFF
# define Command_Length 0x06
# define End_Byte 0xEF
# define Acknowledge 0x00 //Returns info with command 0x41 [0x01: info, 0x00: no info]

# define ACTIVATED LOW

int buttonNext = D3;
int buttonPause = D4;
int buttonPrevious = D5;
boolean isPlaying = true;
unsigned int nextTime = 0;

void setup ()
{
  pinMode(buttonPause, INPUT_PULLUP);
  digitalWrite(buttonPause,HIGH);
  pinMode(buttonNext, INPUT_PULLUP);
  digitalWrite(buttonNext,HIGH);
  pinMode(buttonPrevious, INPUT_PULLUP);
  digitalWrite(buttonPrevious,HIGH);

  Serial1.begin(9600);
  delay(1000);
  isPlaying = false;
  setVolume(300);

}


void loop () { 

    if (nextTime > millis()) {
        return;
    }

    
if (digitalRead(buttonPause) == ACTIVATED) {
    if(isPlaying) {
      pause();
      isPlaying = false;
    } else {
      isPlaying = true;
      play();
    }
  }


 if (digitalRead(buttonNext) == ACTIVATED) {
    if(isPlaying) {
      playNext();
    }
 }

   if (digitalRead(buttonPrevious) == ACTIVATED)
  {
    if(isPlaying)
    {
      playPrevious();
    }
  }
  
  
  nextTime = millis() + 10000;
  
}


void playFirst()
{
  execute_CMD(0x3F, 0, 0);
  delay(500);
  execute_CMD(0x11,0,1); 
  delay(500);
}


void pause()
{
  execute_CMD(0x0E,0,0);
  delay(500);
}


void play()
{
  execute_CMD(0x0D,0,1); 
  delay(500);
}


void playNext()
{
  execute_CMD(0x01,0,1);
  delay(500);
}


void playPrevious()
{
  execute_CMD(0x02,0,1);
  delay(500);
}


void setVolume(int volume)
{
  execute_CMD(0x06, 0, volume); // Set the volume (0x00~0x30)
  delay(2000);
}


void execute_CMD(byte CMD, byte Par1, byte Par2) // Excecute the command and parameters
{
 // Calculate the checksum (2 bytes)
 int16_t checksum = -(Version_Byte + Command_Length + CMD + Acknowledge + Par1 + Par2);

 // Build the command line
 byte Command_line[10] = { Start_Byte, Version_Byte, Command_Length, CMD, Acknowledge, Par1, Par2, checksum >> 8, checksum & 0xFF, End_Byte};

 //Send the command line to the module
 for (byte k=0; k<10; k++)
 {
  Serial1.write( Command_line[k]);
 }
}
